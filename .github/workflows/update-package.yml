name: Check for Package Updates

on:
  schedule:
    # Run daily at 2 AM
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      auto_merge:
        description: 'Auto-merge PR if tests pass'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  check-update:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
      
      - name: Check for updates
        id: check
        run: |
          # Get current version from package.json
          CURRENT=$(node -p "require('./package.json').dependencies['@mcoster/astro-local-package']" | sed 's/[\^~]//')
          echo "Current version: $CURRENT"
          
          # Get latest version available from GitHub Package registry
          LATEST=$(npm view @mcoster/astro-local-package version)
          if [ $? -ne 0 ]; then
            echo "Error: Failed to fetch latest package version"
            exit 1
          fi
          echo "Latest version: $LATEST"
          
          # Compare versions - handle version prefixes
          CURRENT_CLEAN=$(echo "$CURRENT" | sed 's/[\^~]//')
          LATEST_CLEAN=$(echo "$LATEST" | sed 's/[\^~]//')
          
          if [ "$CURRENT_CLEAN" != "$LATEST_CLEAN" ]; then
            echo "Update available: $CURRENT_CLEAN -> $LATEST_CLEAN"
            echo "has_update=true" >> $GITHUB_OUTPUT
            echo "current_version=$CURRENT_CLEAN" >> $GITHUB_OUTPUT
            echo "latest_version=$LATEST_CLEAN" >> $GITHUB_OUTPUT
          else
            echo "Package is up to date"
            echo "has_update=false" >> $GITHUB_OUTPUT
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update package
        if: steps.check.outputs.has_update == 'true'
        run: |
          npm update @mcoster/astro-local-package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Test build
        if: steps.check.outputs.has_update == 'true'
        run: |
          # Install all dependencies
          npm ci
          
          # Run build to ensure it works
          npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Pull Request
        if: steps.check.outputs.has_update == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore: update @mcoster/astro-local-package to ${{ steps.check.outputs.latest_version }}
            
            Updates @mcoster/astro-local-package from ${{ steps.check.outputs.current_version }} to ${{ steps.check.outputs.latest_version }}
            
            Co-Authored-By: GitHub Actions <actions@github.com>
          branch: update-astro-package-${{ steps.check.outputs.latest_version }}
          delete-branch: true
          title: 'chore: update @mcoster/astro-local-package to ${{ steps.check.outputs.latest_version }}'
          body: |
            ## Package Update Available
            
            Updates `@mcoster/astro-local-package` from `${{ steps.check.outputs.current_version }}` to `${{ steps.check.outputs.latest_version }}`
            
            ### Automated Checks
            - ‚úÖ Package updated successfully
            - ‚úÖ Build tested and passing
            - ‚úÖ Ready to merge
            
            ### Auto-merge
            This PR will be automatically merged if all checks pass and auto-merge is enabled.
            
            To manually merge, review the changes and click "Merge pull request".
            
            ---
            *Generated automatically by [Package Update Workflow](https://github.com/${{ github.repository }}/actions/workflows/update-package.yml)*
          labels: |
            dependencies
            automated
      
      - name: Enable auto-merge
        if: steps.check.outputs.has_update == 'true' && steps.create-pr.outputs.pull-request-number && (github.event.inputs.auto_merge == 'true' || github.event_name == 'schedule')
        run: |
          gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --auto --merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Summary
        if: always()
        run: |
          if [ "${{ steps.check.outputs.has_update }}" == "true" ]; then
            echo "‚úÖ Update found and PR created: #${{ steps.create-pr.outputs.pull-request-number }}"
            echo "Version: ${{ steps.check.outputs.current_version }} ‚Üí ${{ steps.check.outputs.latest_version }}"
            if [ "${{ github.event.inputs.auto_merge }}" == "true" ] || [ "${{ github.event_name }}" == "schedule" ]; then
              echo "üîÑ Auto-merge enabled - PR will merge automatically when checks pass"
            else
              echo "‚ö†Ô∏è Auto-merge disabled - Manual review required"
            fi
          else
            echo "‚úÖ Package is already up to date"
          fi